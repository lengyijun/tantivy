[package]
name = "tantivy"
version = "0.14.0-dev"
authors = ["Paul Masurel <paul.masurel@gmail.com>"]
license = "MIT"
categories = ["database-implementations", "data-structures"]
description = """Search engine library"""
documentation = "https://docs.rs/tantivy/"
homepage = "https://github.com/tantivy-search/tantivy"
repository = "https://github.com/tantivy-search/tantivy"
readme = "README.md"
keywords = ["search", "information", "retrieval"]
edition = "2018"

[dependencies]
base64 = { git = "https://github.com/mesalock-linux/rust-base64-sgx", branch = "master" }
byteorder = { git = "https://github.com/mesalock-linux/byteorder-sgx", branch = "master" }
crc32fast = { git = "https://github.com/mesalock-linux/rust-crc32fast-sgx", branch = "master" }
once_cell = {git="https://github.com/lengyijun/once_cell"}
regex = { git = "https://github.com/mesalock-linux/regex-sgx", branch = "master"}
tantivy-fst = {git="https://github.com/lengyijun/fst-sgx"}
#memmap = {git="https://github.com/lengyijun/memmap-rs", optional=true}
lz4 = {version="1.20", optional=true}
snap = { git = "https://github.com/lengyijun/rust-snappy", branch = "master" }
tempfile = {git="https://github.com/lengyijun/tempfile"}
log = { git = "https://github.com/mesalock-linux/log-sgx", branch = "master", features = ["kv_unstable"] }
serde = { git = "https://github.com/mesalock-linux/serde-sgx", branch = "master", features = ["derive", "rc"] }
serde_json = { git = "https://github.com/mesalock-linux/serde-json-sgx", branch = "master" }
levenshtein_automata ={git="https://github.com/lengyijun/levenshtein-automata"}
uuid = { git = "https://github.com/mesalock-linux/uuid-sgx", branch = "master", features = ["serde", "v1", "v3", "v4", "v5"] }
crossbeam = {git="https://github.com/lengyijun/crossbeam"}
futures = {git="https://github.com/lengyijun/futures-rs",  features=["thread-pool"] }
owning_ref = {git="https://github.com/remexre/owning-ref-rs",branch="no_std",default-features = false}
stable_deref_trait = {version="1.0.0",default-features=false}
rust-stemmers = {git="https://github.com/lengyijun/rust-stemmers"}
downcast-rs = {git="https://github.com/lengyijun/downcast-rs"}
tantivy-query-grammar = { version="0.13", path="./query-grammar" }
bitpacking = {git="https://github.com/lengyijun/bitpacking", default-features = false, features=["bitpacker4x"]}
census = {git="https://github.com/lengyijun/census"}
fnv = { git = "https://github.com/mesalock-linux/rust-fnv-sgx", branch = "master" }
owned-read = {git="https://github.com/lengyijun/owned-read"}
failure = { git = "https://github.com/mesalock-linux/failure-sgx", branch = "master" }
htmlescape = {git="https://github.com/lengyijun/rust-htmlescape"}
fail = {git="https://github.com/lengyijun/fail-rs"}
murmurhash32 = {git="https://github.com/lengyijun/murmurhash32"}
chrono = { git = "https://github.com/mesalock-linux/chrono-sgx", branch = "master" }
smallvec = { git = "https://github.com/mesalock-linux/rust-smallvec-sgx", features = ["write", "union", "specialization", "may_dangle"] }

[target.'cfg(not(target_env = "sgx"))'.dependencies]
sgx_tstd = { version = "1.0", rev = "v1.1.2", git = "https://github.com/apache/teaclave-sgx-sdk.git", features=["untrusted_fs","thread", "backtrace"] }

[dev-dependencies]
rand = { git = "https://github.com/mesalock-linux/rand-sgx", tag = "v0.7.3_sgx1.1.2", features = ["small_rng"] }
maplit = "1"
matches = "0.1.8"
proptest = "0.10"

[dev-dependencies.fail]
git="https://github.com/lengyijun/fail-rs"
features = ["failpoints"]

[profile.release]
opt-level = 3
debug = false
debug-assertions = false

[profile.test]
debug-assertions = true
overflow-checks = true

[features]
default = ["mmap"]
mmap = []
lz4-compression = ["lz4"]
failpoints = ["fail/failpoints"]
unstable = [] # useful for benches.
scoref64 = [] # scores are f64 instead of f32. was introduced to debug blockwand.

[workspace]
members = ["query-grammar"]

[badges]
travis-ci = { repository = "tantivy-search/tantivy" }

# Following the "fail" crate best practises, we isolate
# tests that define specific behavior in fail check points
# in a different binary.
#
# We do that because, fail rely on a global definition of
# failpoints behavior and hence, it is incompatible with
# multithreading.
[[test]]
name = "failpoints"
path = "tests/failpoints/mod.rs"
required-features = ["fail/failpoints"]
